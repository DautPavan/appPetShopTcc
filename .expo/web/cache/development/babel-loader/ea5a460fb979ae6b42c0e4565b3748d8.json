{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Daut\\\\Desktop\\\\unip\\\\TCC\\\\mobile\\\\appPetShop\\\\App.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport AppLoading from 'expo-app-loading';\nimport { Ubuntu_700Bold, useFonts } from '@expo-google-fonts/ubuntu';\nimport { Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto';\nimport Routes from \"./src/routes\";\nexport default function App() {\n  var _useFonts = useFonts({\n    Ubuntu_700Bold: Ubuntu_700Bold,\n    Roboto_400Regular: Roboto_400Regular,\n    Roboto_500Medium: Roboto_500Medium\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    });\n  } else {\n    return React.createElement(React.Fragment, null, React.createElement(StatusBar, {\n      style: \"auto\",\n      backgroundColor: \"transparent\",\n      translucent: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }), React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/Daut/Desktop/unip/TCC/mobile/appPetShop/App.tsx"],"names":["StatusBar","React","AppLoading","Ubuntu_700Bold","useFonts","Roboto_400Regular","Roboto_500Medium","Routes","App","fontsLoaded"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,cAAT,EAAyBC,QAAzB,QAAyC,2BAAzC;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,2BAApD;AACA,OAAOC,MAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAAoBJ,QAAQ,CAAC;AAC3BD,IAAAA,cAAc,EAAdA,cAD2B;AAE3BE,IAAAA,iBAAiB,EAAjBA,iBAF2B;AAG3BC,IAAAA,gBAAgB,EAAhBA;AAH2B,GAAD,CAA5B;AAAA;AAAA,MAAKG,WAAL;;AAMA,MAAI,CAACA,WAAL,EAAkB;AAChB,WAAO,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO;AACL,WACE,0CACE,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAwB,MAAA,eAAe,EAAC,aAAxC;AAAsD,MAAA,WAAW,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;AACF","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport Login from './src/pages/Login';\nimport AppLoading from 'expo-app-loading';\nimport { Ubuntu_700Bold, useFonts } from '@expo-google-fonts/ubuntu'\nimport { Roboto_400Regular, Roboto_500Medium } from '@expo-google-fonts/roboto'\nimport Routes from './src/routes';\n\nexport default function App() {\n  let [fontsLoaded] = useFonts({\n    Ubuntu_700Bold,\n    Roboto_400Regular,\n    Roboto_500Medium\n  });\n\n  if (!fontsLoaded) {\n    return <AppLoading />;\n  } else {\n    return (\n      <>\n        <StatusBar style=\"auto\" backgroundColor=\"transparent\" translucent />\n        <Routes />\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}